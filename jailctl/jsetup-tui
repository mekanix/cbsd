#!/usr/local/bin/cbsd
#v11.2.1
. ${subr}
. ${strings}
. ${tools}

[ ! -f "${sharedir}/jail-arg" ] && err 1 "No such jail-arg skel"
. ${sharedir}/jail-arg
CBSDMODULE="jail"
MYDESC="Ncurses based setup for jail-arg"
MYARG="jname"
MYOPTARG="${JARG} outfile"

init $*

. ${settingstui}
. ${dialog}


commit()
{
	local _oldjname _newjname

	_oldjname="${jname}"

	for i in ${JARG}; do
		eval VAL=\$$i
		eval OVAL=\$OLDVAL_${i}

		if [ "${i}" = "jname" ]; then
			_oldjname="${OVAL}"
			_newjname="${VAL}"
			continue
		fi
		[ "${VAL}" = "${OVAL}" ] && continue
		echo "jset mode=quiet jname=${_oldjname} $i=\"${VAL}\""
		jset mode=quiet jname=${_oldjname} $i="${VAL}"
	done

	if [ "${_oldjname}" != "${_newjname}" -a -n "${_newjname}" ]; then
		${ECHO} "jname: ${MAGENTA}${_newjname}${NORMAL}"
		jrename old=${_oldjname} new=${_newjname}
		jname="${_newjname}"
	fi

	[ ${repo} -eq 1 ] && jconfig mode=list jname=${jname}
	exit 0
}


store_defaults()
{
	local i VAL

	eval $( for i in "jname" ${JARG}; do
		[ "${i}" = "repo" ] && repo=1 && continue
		eval VAL=\$$i
		echo "OLDVAL_${i}=\"${VAL}\""
	done )
}


dialog_menu_main()
{
	repo=0 # flags for execution jsetup-tui from repo get image

	title=" Config for ${jname} "
	hline=
	local _descr
	local defaultitem=

	item_let="A"
	item_num=0

	local i _mytest skip

	local _checkbox="baserw astart applytpl floatresolv mount_ports mount_src vnet mkhostsfile \
mount_devfs allow_mount allow_devfs allow_nullfs allow_fusefs mount_fdescfs allow_fdescfs allow_dying allow_procfs \
allow_tmpfs allow_zfs allow_kmem mount_kernel mount_obj protected hidden allow_reserved_ports persist \
allow_raw_sockets"

	f_dialog_default_fetch defaultitem

	# checkbox mark
	for i in ${_checkbox}; do
		eval _mytest=\$$i
		if [ "${_mytest}" = "1" ]; then
			export ${i}_mark="X"
		else
			export ${i}_mark=" "
		fi
	done

	local menu_list="
		'EXIT'	'EXIT'	'Exit jconstruct-tui'
	" # END-QUOTE

	for i in ${JARG}; do

		# For FreeBSD 11.1+ only
		if [ "${i}" = "allow_reserved_ports" ]; then
			[ ${freebsdhostversion} -lt 1100513 ] && continue
		fi

		# For FreeBSD 11.2+ only
		# as makejconf: wait for MFC in RELENG_11
		# to set 11xxxxx
		if [ "${i}" = "allow_fusefs" ]; then
			[ ${freebsdhostversion} -lt 1200074 ] && continue
		fi

		skip=0
		_mydesc=
		eval _mydesc=\$${i}_msg

		[ -z "${_mydesc}" ] && _mydesc="No description"
		inc_menu_index item_let

		for x in ${_checkbox}; do
			[ ${skip} -eq 1 ] && break

			if [ "${x}" = "${i}" ]; then
				eval _mytest=\$${x}_mark
				[ -z "${_mytest}" ] && _mytest=" "
				menu_list="${menu_list} '${item_let} ${x}'	'[${_mytest}]'	'${_mydesc}'"
				skip=1
			fi
		done

		[ ${skip} -eq 1 ] && continue

		eval VAL=\$$i

		if [ -z "${VAL}" ]; then
			menu_list="${menu_list} '${item_let} $i'	' '	'${_mydesc}'"
		else
			menu_list="${menu_list} '${item_let} $i'	'${VAL}'	'${_mydesc}'"
		fi
	done

	menu_list="${menu_list} '-'		'-'	''"
	if [ "${vnet}" = "1" -a "${vimage_feature}" = "1" ]; then
		[ ${jid} -eq 0 ] && menu_list="${menu_list} 'jailnic'	'Network config >>'	'cbsd jailnic-tui.'"
	fi
	[ "${racct}" = "1" ] && menu_list="${menu_list} 'jrctl'		'Rrtl config >>'	'cbsd jrctl-tui'"
	menu_list="${menu_list} 'order'		'Boot order >>'		'cbsd jorder-tui'"
	menu_list="${menu_list} '-'		'-'	''"

	menu_list="${menu_list}	'1 COMMIT'	'Save changes and quit'	'Save!'"

	cbsd_menubox
	retval=$?

	f_dialog_data_sanitize menu_choice
	f_dialog_menutag_store "$menu_choice"
	f_dialog_default_store "$menu_choice"

	return $retval
}

### MAIN
zero_profile="jail-freebsd-default.conf"
#defaults

. ${buildconf}
readconf ${zero_profile}

# re-read profile for init global_profile_file variable
get_construct_profile ${default_profile}
[ -z "${profile}" -a -n "${jail_profile}" ] && profile="${jail_profile}"

. ${jrcconf}
[ $? -eq 1 ] && err 1 "${MAGENTA}No such jail: ${GREEN}${jname}${NORMAL}"

shift #skip for jname

if [ ${jid} -ne 0 ]; then
	# Command for modifying on-the fly here:
	JARG="ip4_addr cpuset astart exec_consolelog mount_src mount_ports mount_kernel allow_mount allow_nullfs allow_fusefs allow_tmpfs allow_procfs allow_sysvipc devfs_ruleset jdomain b_order applytpl protected hidden allow_raw_sockets"
else
	JARG="$@"
fi

f_dialog_title "$msg_system_console_configuration"
f_dialog_backtitle "${ipgm:+bsdconfig }$pgm"
f_mustberoot_init

store_defaults

# fill promt variable used in dialog_menu_main about active jail status
# otherwise - append the argument that we can change also and jname.
if [ ${jid} -ne 0 ]; then
	prompt="Jail is ONLINE. Only on-the-fly options printed."
else
	JARG="jname ${JARG}"
fi

while [ 1 ]; do
	dialog_menu_main || f_die

	index=${mtag%% *}
	mychoice=${mtag##* }

	case "${mychoice}" in
		"EXIT")
			exit 0
			;;
		"-")
			continue
			;;
		"COMMIT")
			commit
			;;
		"jrctl")
			/usr/local/bin/cbsd jrctl-tui jname="${jname}"
			;;
		"b_order")
			/usr/local/bin/cbsd jorder-tui jname="${jname}"
			b_order=$( cbsdsql local "SELECT b_order FROM jails WHERE jname=\"${jname}\"" 2>/dev/null )
			;;
		baserw|astart|applytpl|floatresolv|mount_ports|mount_src|vnet|mkhostsfile|persist)
			invert_checkbox ${mychoice}
			continue
			;;
		mount_devfs|allow_mount|allow_devfs|allow_nullfs|allow_fusefs|mount_fdescfs|allow_fdescfs|allow_dying|allow_procfs|protected|hidden|allow_reserved_ports|allow_raw_sockets)
			invert_checkbox ${mychoice}
			continue
			;;
		allow_tmpfs|allow_zfs|allow_kmem|mount_kernel|mount_obj)
			invert_checkbox ${mychoice}
			continue
			;;
		interface)
			get_construct_interface -d 1 -s "tap bridge vboxnet"
			continue
			;;
		"jailnic")
			jailnic-tui jname=${jname}
			;;
		*)
			get_construct_${mychoice}
			continue
			;;
	esac
done
