#v11.2.1
# this is a temporary wrapper for version 9.2.2 is intended to make the transition to sqlite3 version if rc.conf more painless
# serve remote data only
# required:
# strings.subr
#

if [ ! "$_CBSD_RRCCONF_SUBR" ]; then
_CBSD_RRCCONF_SUBR=1
###

# load data from local bhyve settings
# $1 - jname
init_bhyve_rrcconf()
{
	local jname="${1}"
	local _sqlite="${2}"

	if [ -z "${jname}" ]; then
		echo "init_bhyve_rrconf: no jname"
		return 0
	fi
	if [ ! -r "${_sqlite}" ]; then
		echo "init_bhyve_rrconf: no sqlite ${_sqlite}"
		return 0
	fi
	local sqldelimer="|"
	local A

	A=$( cbsdsql ${_sqlite} "SELECT astart,vm_cpus,vm_ram,vm_os_type,vm_boot,vm_os_profile,vm_vnc_port,virtio_type,bhyve_vnc_tcp_bind,bhyve_vnc_resolution,cd_vnc_wait,protected,hidden,maintenance,ip4_addr,vnc_password,vm_hostbridge,vm_iso_path,vm_console,vm_efi,bhyve_generate_acpi,bhyve_wire_memory,bhyve_rts_keeps_utc,bhyve_force_msi_irq,bhyve_x2apic_mode,bhyve_mptable_gen,bhyve_ignore_msr_acc,bhyve_vnc_vgaconf,vm_cpu_topology,debug_engine FROM settings ORDER BY (created) DESC LIMIT 1;"  2>/dev/null )

	if [ -n "${A}" ]; then
		OIFS="${IFS}"
		IFS="|"
		astart=
		vm_cpus=
		vm_ram=
		vm_os_type=
		vm_boot=
		vm_os_profile=
		vm_vnc_port=
		virtio_type=
		bhyve_vnc_tcp_bind=
		bhyve_vnc_resolution=
		cd_vnc_wait=
		protected=
		hidden=
		maintenance=
		ip4_addr=
		vnc_password=
		vm_hostbridge=
		vm_iso_path=
		vm_console=
		vm_efi=
		bhyve_generate_acpi=
		bhyve_wire_memory=
		bhyve_rts_keeps_utc=
		bhyve_force_msi_irq=
		bhyve_x2apic_mode=
		bhyve_mptable_gen=
		bhyve_ignore_msr_acc=
		bhyve_vnc_vgaconf=
		vm_cpu_topology=
		debug_engine=
		sqllist "${A}" astart vm_cpus vm_ram vm_os_type vm_boot vm_os_profile vm_vnc_port virtio_type bhyve_vnc_tcp_bind bhyve_vnc_resolution cd_vnc_wait protected hidden maintenance ip4_addr vnc_password vm_hostbridge vm_iso_path vm_console vm_efi bhyve_generate_acpi bhyve_wire_memory bhyve_rts_keeps_utc bhyve_force_msi_irq bhyve_x2apic_mode bhyve_mptable_gen bhyve_ignore_msr_acc bhyve_vnc_vgaconf vm_cpu_topology debug_engine
		IFS="${OIFS}"
	else
		err 1 "${MAGENTA}Unable to fetch vm data from: ${GREEN}${jailsysdir}/${jname}/local.sqlite${NORMAL}"
	fi
}

# load data from local XEN settings
# $jname
init_xen_rrcconf()
{
	local jname="${1}"
	[ -z "${jname}" ] && return 0
	local sqldelimer="|"
	local A

	A=$( cbsdsql ${jailsysdir}/${jname}/local.sqlite "SELECT vm_cpus,vm_ram,vm_os_type,vm_boot,vm_os_profile,vm_vnc_port,xen_vnc_tcp_bind,xen_vnc_resolution,cd_vnc_wait,protected,hidden,maintenance,ip4_addr,vnc_password FROM settings ORDER BY (created) DESC LIMIT 1;" )

	if [ -n "${A}" ]; then
		OIFS="${IFS}"
		IFS="|"
		vm_cpus=
		vm_ram=
		vm_os_type=
		vm_boot=
		vm_os_profile=
		vm_vnc_port=
		xen_vnc_tcp_bind=
		xen_vnc_resolution=
		cd_vnc_wait=
		protected=
		hidden=
		maintenance=
		ip4_addr=
		vnc_password=
		sqllist "${A}" vm_cpus vm_ram vm_os_type vm_boot vm_os_profile vm_vnc_port xen_vnc_tcp_bind xen_vnc_resolution cd_vnc_wait protected hidden maintenance ip4_addr vnc_password
		IFS="${OIFS}"
	else
		err 1 "${MAGENTA}Unable to fetch vm data from: ${GREEN}${jailsysdir}/${jname}/local.sqlite${NORMAL}"
	fi
}

init_rrcconf()
{
	local emulator="bhyve"		# only bhyve was tested
	local _sqlfile

	local RHST

	RHST=$( bwhereis ${jname} | /usr/bin/head -n1 )

	if [ -z "${RHST}" ]; then
		echo "rrcconf: no remote host"
		return 1
	fi

	_sqlfile="${tmpdir}/${RHST}/${jname}/local.sqlite"

	if [ ! -r "${_sqlfile}" ]; then
		#echo "init_rrconf: no sqlite ${_sqlfile}"
		return 0
	fi

	case "${emulator}" in
		bhyve|xen)
			init_${emulator}_rrcconf ${jname} ${_sqlfile}
	esac

	init_jail_path
}

###
fi

# $RHST variable should be pointed to $nodename
# todo: check for $emulator here?
# export ${remote_local_sqlite}
remote_local_sqlite="${tmpdir}/${RHST}/${jname}/local.sqlite"
_sqlfile="${remote_local_sqlite}/local.sqlite"
init_rrcconf ${jname}
