#!/usr/local/bin/cbsd
#v12.0.6
MYARG="mode"
MYOPTARG="jname controller dsk dsk_size bootable"
MYDESC="Manage bhyve ahci/virtio disk"
CBSDMODULE="bhyve"
EXTHELP="wf_bhyve.html"
ADDHELP="mode=attach,detach,remove,list,modify\n\
  - attach - create and attach new disk\n\
  - detach - detach disk from controller (without removing dsk)\n\
  - delete - detach and remove disk\n\
  - modify - modify disk properties (e.g: bootable=)\n\
 modify properties:\n\
  - bootable - set bootable flag (1 - true, - false)\n"

. ${subr}
. ${system}

bootable=
. ${cbsdinit}

available_properties="bootable"

. ${distdir}/bhyve.subr
. ${distdir}/virtual.subr
. ${distdir}/share/bhyve/bhyve-dsk.subr

dsk_attach()
{
	local _val
	for i in jname controller dsk dsk_size; do
		_val=
		eval _val="\$$i"
		[ -z "${_val}" ] && err 1 "${N1_COLOR}bhyve-dsk error: ${N2_COLOR}${i}= ${N1_COLOR}is mandatory${N0_COLOR}"
	done

	add_dsk -c "${controller}" -d "${dsk}" -s "${dsk_size}"
}

dsk_detach()
{
	local _val
	local _devpath

	for i in jname controller dsk; do
		_val=
		eval _val="\$$i"
		[ -z "${_val}" ] && err 1 "${N1_COLOR}bhyve-dsk error: ${N2_COLOR}${i}= ${N1_COLOR}is mandatory${N0_COLOR}"
	done

	_devpath=$( cbsdsqlro storage_media SELECT path FROM media WHERE jname=\"${jname}\" AND type=\"hdd\" AND name=\"hdd-${dsk}.vhd\" LIMIT 1 )
	[ -z "${_devpath}" ] && err 1 "${N1_COLOR}Unable to find in media DB: SELECT path FROM media WHERE jname=\"${jname}\" AND type=\"hdd\" AND name=\"hdd-${dsk}.vhd\"${N0_COLOR}"

	media mode=detach name=hdd-${dsk}.vhd path=${_devpath} type=hdd jname=${jname}
	cbsdsqlrw ${jailsysdir}/${jname}/local.sqlite DELETE FROM bhyvedsk WHERE dsk_controller=\"${controller}\" AND dsk_path=\"${dsk}.vhd\" AND dsk_type=\"vhd\"
}

dsk_delete()
{
	local _val
	local _devpath

	for i in jname controller dsk; do
		_val=
		eval _val="\$$i"
		[ -z "${_val}" ] && err 1 "${N1_COLOR}bhyve-dsk error: ${N2_COLOR}${i}= ${N1_COLOR}is mandatory${N0_COLOR}"
	done

	_devpath=$( cbsdsqlro storage_media SELECT path FROM media WHERE jname=\"${jname}\" AND type=\"hdd\" AND name=\"hdd-${dsk}.vhd\" LIMIT 1 )
	[ -z "${_devpath}" ] && err 1 "${N1_COLOR}Unable to find in media DB: SELECT path FROM media WHERE jname=\"${jname}\" AND type=\"hdd\" AND name=\"hdd-${dsk}.vhd\"${N0_COLOR}"

	media mode=delete name=hdd-${dsk}.vhd path=${_devpath} type=hdd jname=${jname}
	cbsdsqlrw ${jailsysdir}/${jname}/local.sqlite DELETE FROM bhyvedsk WHERE dsk_controller=\"${controller}\" AND dsk_path=\"${dsk}.vhd\" AND dsk_type=\"vhd\"
}

dsk_modify_bootable()
{
	local _bootable _res
	local _old_controller= _old_dsk=

	for i in jname controller dsk; do
		_val=
		eval _val="\$$i"
		[ -z "${_val}" ] && err 1 "${N1_COLOR}dsk_modify_bootable error: ${N2_COLOR}${i}= ${N1_COLOR}is mandatory${N0_COLOR}"
	done

	[ ! -r ${jailsysdir}/${jname}/local.sqlite ] && err 1 "${N1_COLOR}No such database: ${N2_COLOR}${jailsysdir}/${jname}/local.sqlite${N0_COLOR}"

	case "${bootable}" in
		[Nn][Oo] | [Ff][Aa][Ll][Ss][Ee] | 0)
			_bootable="false"
			;;
		[Yy][Ee][Ss] | [Tt][Rr][Uu][Ee] | 1)
			_bootable="true"
			;;
		*)
			err 1 "${N1_COLOR}dsk_modify_bootable: unknown bootable: ${N2_COLOR}${bootable}. ${N1_COLOR}Valid: [1|true|yes] and [0|false|no]${N0_COLOR}"
			;;
	esac

	_res=$( cbsdsqlro ${jailsysdir}/${jname}/local.sqlite SELECT dsk_controller,dsk_path FROM bhyvedsk WHERE bootable=${_bootable} LIMIT 1 | /usr/bin/awk '{printf $1}' )
	sqllist "${_res}" _old_controller _old_dsk

	case "${_bootable}" in
		true)
			if [ "${_old_controller}" = "${controller}" ]; then
				if [ "${_old_dsk}" = "${dsk}" ]; then
					${ECHO} "${N1_COLOR}${jname}: ${controller} ${dsk} already bootable${N0_COLOR}"
					return 0
				fi
			fi

			# currently only one device can be bootable, so set false for all devices first
			cbsdsqlrw ${jailsysdir}/${jname}/local.sqlite UPDATE bhyvedsk SET bootable=false
			[ -n "${_res}" ] && ${ECHO} "${N1_COLOR}Update bootable flag for ${jname}:${_old_controller}:${_old_dsk} -> false${N0_COLOR}"
			${ECHO} "${N1_COLOR}Update bootable flag for ${jname}:${controller}:${dsk} -> ${N2_COLOR}${_bootable}${N0_COLOR}"
			;;
		false)
			if [ "${_old_controller}" = "${controller}" ]; then
				if [ "${_old_dsk}" = "${dsk}" ]; then
					${ECHO} "${N1_COLOR}${jname}: ${controller} ${dsk} already not bootable${N0_COLOR}"
					return 0
				fi
			fi
			${ECHO} "${N1_COLOR}Update bootable flag for ${jname}:${controller}:${dsk} -> ${N2_COLOR}${_bootable}${N0_COLOR}"
			;;
	esac

	cbsdsqlrw ${jailsysdir}/${jname}/local.sqlite UPDATE bhyvedsk SET bootable=${_bootable} WHERE dsk_controller=\"${controller}\" AND dsk_path=\"${dsk}\"
	return 0
}


dsk_modify()
{
	local _val
	local _devpath _prop_num=0

	# determine properties
	for i in ${available_properties}; do
		_val=
		eval _val="\$$i"
		[ -z "${_val}" ] && continue
		dsk_modify_${i}
		_prop_num=$(( _prop_num + 1 ))
	done

	[ ${_prop_num} -eq 0 ] && ${ECHO} "${N1_COLOR}available properties: ${N2_COLOR}${available_properties}${N0_COLOR}"
}

case "${mode}" in
	attach)
		dsk_attach
		;;
	delete)
		dsk_delete
		;;
	detach)
		dsk_detach
		;;
	list)
		bhyve-dsk-list
		;;
	modify)
		dsk_modify
		;;
	*)
		err 1 "${N1_COLOR}Unknown mode: ${N2_COLOR}${mode}${N0_COLOR}"
		;;
esac
