#!/usr/local/bin/cbsd
#v11.1.17
MYARG=""
MYOPTARG="display header active human"
MYDESC="Operate with CPU topology configuration"
CBSDMODULE="sys"
ADDHELP="header=0 don't print header\n\
display= list by comma for column. Default: name,sockets,cores,threads\n"

. ${subr}

. ${cbsdinit}

. ${system}

[ -z "${display}" ] && display="name,sockets,cores,threads"

#remove commas for loop action on header
mydisplay=$( echo ${display} | /usr/bin/tr ',' '  ' )

# upper for header
myheader=$( echo ${mydisplay} | /usr/bin/tr '[:lower:]' '[:upper:]' )

show_header()
{
	local _header="${BOLD}${myheader}${N0_COLOR}"
	[ ${header} -eq 1 ] && ${ECHO} ${_header}
}

# if $1 = "Unregister" then overwrite status to "Unregister"
populate_output_data()
{
	local _i _val

	_status=

	printf "${N0_COLOR}" # for column sort

	#populate values for in output string
	for _i in ${mydisplay}; do

		_val=""

		eval _val="\$$_i"

		[ -z "${_val}" ] && _val="\-"
		printf "${_val} "
	done

	printf "\n"
}


# $1 - which file from. Eg: local
show_jaildata_from_sql()
{
	local _i

	#   set sqlfile for ". rcconf" including
	if [ -n "${1}" ]; then
		sqlfile="$1"
	else
		sqlfile="local"
	fi

	[ -n "${2}" ] && local jname="${2}"

	_sql="SELECT name,sockets,cores,threads FROM vm_cpu_topology"
	cbsdsqlro ${sqlfile} ${_sql}| while read name sockets cores threads; do
		populate_output_data
		${ECHO} ${_status}
	done
}


show_local()
{
	local _errcode _status

	show_header
	show_jaildata_from_sql local
}

show_vhid()
{
	show_local
}

#### MAIN
[ -z "${header}" ] && header=1
sqldelimer=" "
show_local | /usr/bin/column -t
