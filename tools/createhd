#!/usr/local/bin/cbsd
#v11.0.5
MYARG="path size"
MYOPTARG="format type name jname"
MYDESC="Create virtual storage media for bhyve"
CBSDMODULE="bhyve"
EXTHELP="wf_bhyve.html"
ADDHELP="name=storage name\n\
path=storage path\n\
type=hdd,cd\n\
format=vdi,vmdk,vhd\n\
size=size of image\n"

. ${subr}

. ${cbsdinit}

. ${system}
. ${distdir}/bhyve.subr

dsk_path="${path}"

# $1 - which file from. Eg: local
show_data_from_sql()
{
	local _i

	_sql="SELECT name,path,type,jname FROM media"

	cbsdsqlro storage_media ${_sql} | while read name path type jname; do
		populate_output_data
	done

	IFS=" "
}


# select into $vm_res variable path of media by name
# return 0 if data exist
#
select_by_name()
{
	vm_res=$( cbsdsqlro storage_media SELECT path FROM media WHERE name=\"${name}\" )

	[ -z "${vm_res}" ] && return 1

	return 0
}

# select into $vm_res variable name of media by $path or $1
# return 0 if data exist
select_by_path()
{
	local _p

	if [ -n "${1}" ]; then
		_path="${1}"
	else
		_path="${path}"
	fi

	vm_res=$( cbsdsqlro storage_media SELECT name FROM media WHERE path=\"${_path}\" )

	[ -z "${vm_res}" ] && return 1

	return 0
}

update_jname()
{
	cbsdsqlrw storage_media "UPDATE media SET jname=\"${jname}\" WHERE name=\"${name}\" AND path=\"${path}\""
}

update_type()
{
	cbsdsqlrw storage_media "UPDATE media SET type=\"${type}\" WHERE name=\"${name}\" AND path=\"${path}\""
}


#### MAIN
if is_number ${size}; then
	if conv2bytes ${size}; then
		size="${convval}"
	fi
fi

named_disk=1		# 1 - seq/named disk for existing jail
			# 0: /full/path
			# 1: dskX

prefix=$( substr --pos=0 --len=1 --str=${dsk_path} )
[ "${prefix}" = "/" ] && named_disk=0

if [ ${named_disk} -eq 1 ]; then
	prefix=$( substr --pos=0 --len=3 --str=${dsk_path} )
	[ "${prefix}" != "dsk" ] && err 1 "${N1_COLOR}Non-FS-based path must be named as: ${N2_COLOR}dskX${N0_COLOR}"
fi

[ ${named_disk} -eq 0 -a -r "${dsk_path}" ] && err 1 "${N1_COLOR}File already exist in FS: ${N2_COLOR}${dsk_path}${N0_COLOR}"

if [ ${named_disk} -eq 1 -a -z "${jname}" ]; then

	case "${zfsfeat}" in
		0)
			err 1 "${N1_COLOR}For non-FS-based path (path not started from /), ${N2_COLOR}jname=${N1_COLOR} is mandatory${N0_COLOR}"
			;;
		1)
			jname="CBSDSYS"
			full_path="${jaildatadir}/CBSDSYS-data/${dsk_path}.vhd"
			;;
	esac
fi

[ -z "${name}" ] && name="hdd-${dsk_path}"
[ -z "${type}" ] && type="hdd"

if [ ${named_disk} -eq 1 -a "${jname}" != "CBSDSYS" ]; then
	. ${jrcconf}
	[ $? -eq 1 ] && err 1 "${N1_COLOR}No such vm: ${N2_COLOR}${jname}${N0_COLOR}"
	[ "${emulator}" != "bhyve" ] && err 1 "${N1_COLOR}Not in bhyve mode${N0_COLOR}"
	full_path="${data}/${dsk_path}.vhd"
fi

case ${named_disk} in
	0)
		echo "/usr/bin/truncate -s${size} ${dsk_path}"
		/usr/bin/truncate -s${size} ${dsk_path}

		cbsdsqlrw storage_media "INSERT INTO media ( name, path, type, jname, size ) VALUES ( \"${name}\", \"${dsk_path}\", \"${type}\", \"${jname}\", \"${size}\" )"
		;;
	1)
		[ -r "${full_path}" -a -h "${full_path}" ] && err 1 "${N1_COLOR}Disk file already exist: ${N2_COLOR}${full_path}${N0_COLOR}"

		select_by_path ${full_path}
		[ $? -eq 0 ] && err 1 "${N1_COLOR}Path already registered: ${N2_COLOR}${vm_res}${N0_COLOR}"

		if ! bhyve_create_dsk -p ${full_path} -s ${size} -f 1; then
			err 1 "${N1_COLOR}bhyve_create_dsk from createhd failed for: ${N2_COLOR}${full_path}${N0_COLOR}"
		fi

		;;
esac

if [ "${jname}" = "CBSDSYS" ]; then
	cbsdsqlrw storage_media "UPDATE media SET jname=\"-\" WHERE jname=\"CBSDSYS\" AND path=\"${full_path}\""
fi
