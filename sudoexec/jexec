#!/usr/local/bin/cbsd
#v11.1.3
MYARG="jname"
MYOPTARG="cmd user"
MYDESC="Execution for command inside jail"
ADDHELP="if jname='*' then execute command on all jails"
CBSDMODULE="jail"

. ${subr}
. ${strings}
. ${tools}
init $*

[ -z "${jname}" ] && err 1 "Give me jname"

shift  # todo: jname and cmd may have reverse order

if [ -n "${user}" ]; then
	shift
else
	user="root"
fi

[ -z "${cmd}" ] && cmd="${@}"
[ -z "${cmd}" ] && err 1 "Empty command"

info()
{
	local IFS=" "

	if [ ${_pending_num} -ne 0 ]; then
		_pending_state="${_pending_num}:[${_pending_jail}]"
	else
		_pending_state="${_pending_num}"
	fi

	if [ ${_active_num} -ne 0 ]; then
		_active_state="${_active_num}:[${_active_jail}]"
	else
		_active_state="${_active_num}"
	fi

	printf "${CLRLINE}"
	printf "${CURSORRST}"

	printf "${GREEN} * [${MAGENTA}jexec: ${GREEN}pending: ${LGREEN}${_pending_state}${MAGENTA}, ${YELLOW}active: ${LYELLOW}${_active_state}${GREEN}]${NORMAL}" 1>&2

}

tail_stale_log()
{
	local i

	local IFS="|"

	cbsdsql ${sqlfile} SELECT logfile,jname FROM taskd WHERE owner=\"${task_owner}\" AND id IN \( ${in_id_all} \) AND status=\"1\" | while read logfile jname; do
		[ ! -r ${logfile} ] && continue
		IFS=" "
		${ECHO} "${MAGENTA}Last 200 line of logfile for :${GREEN}${jname}${NORMAL}"
		echo "---cut---"
		/usr/bin/tail -n200 ${logfile}
		echo
		echo "---end---"
		IFS="|"
	done
}

emulator="jail"		# for jname_is_multiple
jname_is_multiple	# import jail_list if jname is mask

if [ -n "${jail_list}" ]; then
	${ECHO} "${MAGENTA}Hint: Press ${GREEN}'Ctrl+t'${MAGENTA} to see last logfile line for active task${NORMAL}" 1>&2
	task_owner="jexec_multiple"

	task_id=
	task_id_cur=

	# spawn command for all jail
	for jname in ${jail_list}; do
		. ${jrcconf}
		[ ${myjid} -eq 0 ] && continue
		task_id_cur=$( task mode=new logfile=/tmp/${task_owner}.${jname}.log.$$ client_id=${jname} autoflush=0 owner=${task_owner} /usr/bin/env NOCOLOR=1 /usr/local/bin/cbsd jexec jname=${jname} ${cmd} 2>/dev/null )
		task_id="${task_id} ${task_id_cur}"
	done

	in_id_all=$( echo ${task_id} | /usr/bin/tr " " "," )

	ret=1
	sleep 1
	sqlfile="cbsdtaskd"

	trap 'tail_stale_log' SIGINFO

	while [ ${ret} -ne 0 ]; do

		_pending_num=0
		_active_num=0

		_pending_jail=
		_active_jail=

		# and control task for each task execution
		OIFS=${IFS}
		IFS="|"

		cbsdsql ${sqlfile} SELECT id,status,logfile,errcode,jname,st_time,end_time FROM taskd WHERE owner=\"${task_owner}\" AND id IN \( ${in_id_all} \) | while read _id _status _logfile _errcode _jname _st_time _end_time; do
			IFS=${OIFS}

			if [ ${_status} -eq 0 ]; then
				_pending_num=$(( _pending_num + 1 ))
				_pending_jail="${_pending_jail} ${_jname}"
			fi

			if [ ${_status} -eq 1 ]; then
				_active_num=$(( _active_num + 1 ))
				_active_jail="${_active_jail} ${_jname}"
			fi

			if [ ${_status} -eq 2 ]; then
				tasktime=$(( _end_time - _st_time ))
				case ${_errcode} in
					0)
						STATE="${GREEN}success in ${tasktime} sec:${NORMAL}"
						;;
					*)
						STATE="${LRED}failed in ${tasktime} sec:${NORMAL}"
						;;
				esac

				echo
				${ECHO} "${LYELLOW}${_jname}${GREEN}: ${STATE}${NORMAL}"
				if [ -f ${_logfile} ]; then
					echo
					/bin/cat ${_logfile}
					echo
					/bin/rm -f ${_logfile}
				fi
				cbsdsql ${sqlfile} DELETE FROM taskd WHERE id=\"${_id}\"
			else
				/bin/cat > /tmp/jexec_multiple.lock.$$ <<EOF
_pending_num="${_pending_num}"
_active_num="${_active_num}"
_pending_jail="${_pending_jail}"
_active_jail="${_active_jail}"
EOF
			fi

			IFS="|"

		done

		IFS=${OIFS}

		if [ -r /tmp/jexec_multiple.lock.$$ ]; then
			. /tmp/jexec_multiple.lock.$$
			info
			# Waiting for other task
			/bin/rm -f /tmp/jexec_multiple.lock.$$
			# push changes to cbsdd
			[ ${ret} -eq 1 ] && /usr/bin/touch ${dbdir}/cbsdtaskd.sqlite
			sleep 1
		else
			# all finished, exit
			ret=0
		fi
	done

	echo

	exit 0
fi

. ${jrcconf}
[ $? -eq 1 ] && err 1 "${MAGENTA}No such jail: ${GREEN}${jname}${NORMAL}"
[ "${emulator}" = "bhyve" ] && err 1 "${MAGENTA}Not for bhyve mode${NORMAL}"

[ ${jid} -ne 0 ] || err 1 "Not running"

#rctl/limits area
. ${workdir}/rctl.subr
[ -z "${nice}" ] && nice="0"

 _formfile="${jailsysdir}/${jname}/helpers/jrctl.sqlite"
[ -r "${_formfile}" ] && nice=$( cbsdsql ${_formfile} "SELECT cur FROM forms WHERE param=\"nice\"" )
[ -z "${nice}" ] && nice="0"

if [ ${exec_fib} -eq 0 ]; then
	SETFIB=""
else
	SETFIB="setfib ${exec_fib}"
fi

if [ "${cpuset}" = "0" ]; then
	CPUSET=""
else
	CPUSET="cpuset -c -l ${cpuset}"
fi

case "${ver}" in
	"empty")
		# is linux?
		if [ -f "${data}/bin/bash" ]; then
			LOGIN_STR="/bin/bash"
		elif [ -f "${data}/bin/sh" ]; then
			LOGIN_STR="/bin/sh" ];
		else
			err 1 "${MAGENTA}Unknown environment, unable to login${NORMAL}"
		fi
		;;
	*)
		if [ "${emulator}" != "jail" -a -n "${emulator}" ]; then
			. ${workdir}/emulator.subr
			init_usermode_emul
			LOGIN_STR="/bin/${emulator} /bin/sh"
		else
			LOGIN_STR="/bin/sh"
		fi
		;;
esac

/usr/bin/nice -n ${nice} ${SETFIB} ${CPUSET} /usr/sbin/jexec -U ${user} ${jid} ${LOGIN_STR} <<CBSD_EOF
${cmd}
CBSD_EOF
