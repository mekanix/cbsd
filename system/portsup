#!/usr/local/bin/cbsd
#v10.1.2
MYARG=""
MYOPTARG="rev dst patch"
MYDESC="Update FreeBSD ports tree in /usr/ports"
ADDHELP="rev=XXX where XXX - svn revision\n\
dst= alternative path instead of /usr/ports\n
patchset=apply patchet\n"

. ${subr}
readconf portsup.conf
. ${cbsdinit}

init_svn()
{
	SCM=""

	if [ -f "/usr/bin/svnlite" ]; then
		SCM="/usr/bin/svnlite"
	elif [ -f "/usr/local/bin/svn" ]; then
		SCM="/usr/local/bin/svn"
	else
		err 1 "${N1_COLOR}No svn in the base. Please install devel/subversion${N0_COLOR}"
	fi

	if [ -z "${scmbase}" ]; then
		SCM_URL="${SVNBASE}"
	else
		SCM_URL="${scmbase}"
	fi

	return 0
}

init_git()
{
	SCM=""

	if [ -f "/usr/local/bin/git" ]; then
		SCM="/usr/local/bin/git"
	else
		err 1 "${N1_COLOR}No git in the base. Please install devel/git${N0_COLOR}"
	fi

	if [ -z "${scmbase}" ]; then
		SCM_URL="${GITBASE}"
	else
		SCM_URL="${scmbase}"
	fi

	return 0
}

svn_checkout()
{
	local _srcdir

	_srcdir=$( /bin/realpath ${dst} )

	# repair and upgrade
	if [ -d "${_srcdir}/.svn" ]; then
		cd ${_srcdir}
		${ECHO} "${N1_COLOR}Processing svn cleanup, please wait...${N0_COLOR}"
		${SCM} cleanup
	fi
	${ECHO} "${N1_COLOR}Processing svn update...${N0_COLOR}"
	${SCM} checkout -r ${rev} ${SCM_URL} ${_srcdir}
}

git_checkout()
{
	local _depth _srcdir
	_srcdir=$( /bin/realpath ${dst} )

	[ "${depth}" != "0" ] && _depth="${depth}"

	if [ -d "${_srcdir}/.git" ]; then
		cd ${_srcdir} && ${SCM} checkout DragonFly_RELEASE_3_8
		cd ${_srcdir} && ${SCM} pull ${_depth}
	else
		${SCM} clone -b ${rev} ${git_flags} ${SCM_URL} ${_srcdir}
	fi
}


### MAIN ###
. ${buildconf}
readconf buildworld.conf
. ${distdir}/universe.subr

set +e
. ${buildconf}
set -e

[ -z "${dst}" ] && dst="/usr/ports"

LOCKFILE=${ftmpdir}/ports_$( /sbin/md5 -qs ${dst} ).lock
makelock ${LOCKFILE}

if [ "${platform}" = "DragonFly" ]; then
	if [ ! -d "/usr/dports/.git" ]; then
		/usr/bin/make -C /usr  dports-create
		res=$?
	else
		/usr/bin/make -C /usr dports-update
		res=$?
	fi
	exit $?
fi

[ ! -d "${dst}" ] && /bin/mkdir -p ${dst}

case "${checkout_method}" in
	svn*)
		init_svn
		svn_checkout
		;;
	git*)
		init_git
		git_checkout
		;;
	*)
		err 1 "${ECHO}Unknown checkout method. Please specify it via: ${N2_COLOR}portsup.conf${N0_COLOR}"
esac
