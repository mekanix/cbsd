#!/usr/local/bin/cbsd
#v11.1.16
globalconf="${distdir}/cbsd.conf";
CBSDMODULE="build"
MYARG=""
MYOPTARG="ver arch target_arch basename"
MYDESC="Remove base dir"
ADDHELP="ver=11.2 for 11.2 or ver=12 or ver=. for current.\n\
stable=1 for RELENG_X\n"

. ${subr}

readconf buildworld.conf

stable=
ostable=

. ${cbsdinit}
. ${system}
. ${distdir}/universe.subr

[ -z "${cbsd_queue_name}" ] && cbsd_queue_name="/clonos/bases/"

# By default ver=current version
over="${ver}"
oarch="${arch}"

. ${buildconf}

# auto-determine for stable if stable not specified
strpos --str="${ver}" --search="."
pos=$?
if [ ${pos} -eq 0 ]; then
	stable=1
	ostable=1
else
	stable=0
	ostable=0
fi

. ${buildconf}

init_supported_arch
init_target_arch
init_basedir
init_srcdir

LOCKFILE=${ftmpdir}/$( /sbin/md5 -qs ${MAKEOBJDIRPREFIX} ).lock

# make base lock
echo $$ > ${BASE_DIR_LOCKFILE}

# CBSD QUEUE
if [ -x "${moduledir}/cbsd_queue.d/cbsd_queue" ]; then
	[ "${cbsd_queue_name}" != "none" ] && cbsd_queue_sys cbsd_queue_name=${cbsd_queue_name} cmd=removebase id=base${ver}-${arch}-${stable} status=1
fi

if [ ! -d "${BASE_DIR}" ]; then
	unregister_base arch=${arch} ver=${ver} stable=${stable}

	# CBSD QUEUE
	if [ -x "${moduledir}/cbsd_queue.d/cbsd_queue" ]; then
		[ "${cbsd_queue_name}" != "none" ] && cbsd_queue_sys cbsd_queue_name=${cbsd_queue_name} cmd=removebase id=base${ver}-${arch}-${stable} status=2
	fi

	err 1 "${N1_COLOR}No such dir: ${N2_COLOR}${BASE_DIR}${N0_COLOR}"
fi

if on_mounted "${BASE_DIR}"; then

	# CBSD QUEUE
	if [ -x "${moduledir}/cbsd_queue.d/cbsd_queue" ]; then
		[ "${cbsd_queue_name}" != "none" ] && cbsd_queue_sys cbsd_queue_name=${cbsd_queue_name} cmd=removebase id=base${ver}-${arch}-${stable} status=2
	fi

	/bin/rm -f ${LOCKFILE}
	err 1 "${N1_COLOR}Current dir in use. Please unmount first ${N2_COLOR}${BASE_DIR}${N0_COLOR}:\n$(/sbin/mount |grep ^${BASE_DIR})"
fi

makelock ${LOCKFILE} "cleanup_bases"
${CHFLAGS_CMD} -R noschg ${BASE_DIR}
/bin/rm -rf ${BASE_DIR}
unregister_base arch=${arch} ver=${ver} stable=${stable}

[ -r ${BASE_DIR_LOCKFILE} ] && /bin/rm -f ${BASE_DIR_LOCKFILE}

# CBSD QUEUE
if [ -x "${moduledir}/cbsd_queue.d/cbsd_queue" ]; then
	[ "${cbsd_queue_name}" != "none" ] && cbsd_queue_sys cbsd_queue_name=${cbsd_queue_name} cmd=removebase id=base${ver}-${arch}-${stable} status=2
fi
