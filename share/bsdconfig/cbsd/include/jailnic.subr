load_nic_info()
{
	nic_last_id=1
	local sqldelimer=" "

	unset niclist

	for last_nic in $( /usr/bin/seq 1 16 ); do
		unset nic_id${last_nic}
		unset nic_name${last_nic}
		unset nic_order${last_nic}
		unset nic_slot${last_nic}
		unset nic_parent${last_nic}
		unset nic_hwaddr${last_nic}
		unset nic_address${last_nic}
	done

	eval $( cbsdsqlro ${jailsysdir}/${jname}/local.sqlite SELECT id,name,nic_order,nic_slot,nic_parent,nic_hwaddr,nic_address FROM jailnic | while read nic_id nic_name nic_order nic_slot nic_parent nic_hwaddr nic_address; do
		echo "export nic_id${nic_last_id}=\"${nic_id}\""
		echo "export nic_name${nic_last_id}=\"${nic_name}\""
		echo "export nic_order${nic_last_id}=\"${nic_order}\""
		echo "export nic_slot${nic_last_id}=\"${nic_slot}\""
		echo "export nic_parent${nic_last_id}=\"${nic_parent}\""
		echo "export nic_hwaddr${nic_last_id}=\"${nic_hwaddr}\""
		echo "export nic_address${nic_last_id}=\"${nic_address}\""
		nic_last_id=$(( nic_last_id + 1 ))
	done ) || err 1 "${N1_COLOR}Error while create nic map${N0_COLOR}"
}

find_first_free_nic_id()
{
	local last_nic _res

	for last_nic in $( /usr/bin/seq 1 16 ); do
		unset _res
		_res=$( cbsdsqlro ${jailsysdir}/${jname}/local.sqlite SELECT name FROM jailnic WHERE name=\"nic${last_nic}\" 2>&1 )
		[ -z "${_res}" ] && break
	done

	echo "${last_nic}"
}

# form for $nic_parent
get_nic_parent()
{
	local _input _retval

	. ${settingstui}

	get_construct_interface -d 0 -s "tap bridge vboxnet lo" -m 1 -d 1 -v 1 -c ${nic_parent}

	_retval=$?

	[ ${_retval} -ne ${DIALOG_OK} ] && return ${_retval}
	[ "${interface}" = "0" ] && interface="disable"
	nic_parent="${interface}"

	return 0
}

# form for $vale_name
get_vale_switch()
{
	local _input _retval

	. ${settingstui}

	local menu_list=$( cbsdsqlro local SELECT name FROM vale | while read name; do
		echo "'${name}' '${name}'        'Switch named ${name}'"
	done ) || err 1 "${N1_COLOR}Error while create vale map${N0_COLOR}"

	[ -z "${menu_list}" ] && menu_list="''  'no data'       ''"

	cbsd_menubox
	retval=$?

	vale_name=

	case $retval in
		${DIALOG_OK})
			nic_parent="${mtag}"
			return 0
			;;
	esac

	return 1
}

# form for new nic
# -h hwaddr -n nic_name -p nic_parent
add_nic()
{
	local nic_name=
	local nic_hwaddr=
	local nic_parent=

	while getopts "h:n:p:" opt; do
		case "${opt}" in
			h) nic_hwaddr="${OPTARG}" ;;
			n) nic_name="${OPTARG}" ;;
			p) nic_parent="${OPTARG}" ;;
		esac
		shift $(($OPTIND - 1))
	done

	[ -z "${nic_address}" ] && nic_address="0"
	[ -z "${nic_parent}" ] && nic_parent="auto"
	[ -z "${nic_name}" ] && err 1 "${N1_COLOR}Empty nic_name${N0_COLOR}"
	[ -z "${nic_hwaddr}" ] && err 1 "${N1_COLOR}Empty nic_hwaddr${N0_COLOR}"

	cbsdsqlrw ${jailsysdir}/${jname}/local.sqlite "INSERT INTO jailnic ( name,nic_parent,nic_hwaddr ) VALUES ( \"${nic_name}\", \"${nic_parent}\", \"${nic_hwaddr}\" )"

	return 0
}


# update hwaddr by nic id
# $nic_hwaddr must be set
update_nic_hwaddr()
{
	local nic="${1}"; shift
	[ -z "${nic_hwaddr}" ] && return 0
	[ -z "${jname}" -o -z "${nic}" ] && return 0

	cbsdsqlrw ${jailsysdir}/${jname}/local.sqlite UPDATE jailnic SET nic_hwaddr=\"${nic_hwaddr}\" WHERE id=\"${nic}\"

	return 0
}

# update nic_parent by nic id
# $nic_parent must be set
update_nic_parent()
{
	local nic="${1}"; shift
	[ -z "${nic_parent}" ] && return 0
	[ -z "${jname}" -o -z "${nic}" ] && return 0

	cbsdsqlrw ${jailsysdir}/${jname}/local.sqlite UPDATE jailnic SET nic_parent=\"${nic_parent}\" WHERE id=\"${nic}\"

	return 0
}
