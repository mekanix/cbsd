#!/usr/local/bin/cbsd
. ${subr}
. ${tools}
. ${dialog}
. ${strings}

# dialog_menu_main
#
# Display the dialog(1)-based application main menu.
#
dialog_menu_main()
{
	local _input _retval

	local btitle="$DIALOG_BACKTITLE"

	local title=" Nic properties ${jname}:${nic_path} "
	hline=

	local prompt="${_desc}"
	local sqldelimer=" "

	eval $( cbsdsqlro ${jailsysdir}/${jname}/local.sqlite SELECT id,name,nic_order,nic_slot,nic_parent,nic_hwaddr,nic_address FROM jailnic WHERE id=\"${nic}\" | while read nic_id nic_name nic_order nic_slot nic_parent nic_hwaddr nic_address; do
		echo "export nic_id${nic_last_id}=\"${nic_id}\""
		echo "export nic_name${nic_last_id}=\"${nic_name}\""
		echo "export nic_order${nic_last_id}=\"${nic_order}\""
		echo "export nic_slot${nic_last_id}=\"${nic_slot}\""
		echo "export nic_parent${nic_last_id}=\"${nic_parent}\""
		echo "export nic_hwaddr${nic_last_id}=\"${nic_hwaddr}\""
		echo "export nic_address${nic_last_id}=\"${nic_address}\""
		nic_last_id=$(( nic_last_id + 1 ))
	done ) || err 1 "${N1_COLOR}Error while create nic map${N0_COLOR}"

	local menu_list="
		'nic_name'	'${nic_name}'		'NIC name'
		'nic_parent'	'${nic_parent}'		'NIC parent interface. 0 - auto'
		'nic_hwaddr'	'${nic_hwaddr}'		'NIC Mac address. 0 - auto'
		'-'		'-'			''
		'remove'	'remove'		'Detach and remove NIC'
	" # END-QUOTE

	local height width rows
	eval f_dialog_menu_with_help_size height width rows \
		\"\$title\"  \
		\"\$btitle\" \
		\"\$prompt\" \
		\"\$hline\"  \
		$menu_list

	# Obtain default-item from previously stored selection
	f_dialog_default_fetch defaultitem

	local menu_choice
	menu_choice=$( eval $DIALOG \
		--clear                                 \
		--title \"\$title\"                     \
		--backtitle \"\$btitle\"                \
		--hline \"\$hline\"                     \
		--item-help                             \
		--ok-label \"\$msg_ok\"                 \
		--cancel-label \"Exit\"                 \
		${USE_XDIALOG:+--help \"\"}             \
		--default-item \"\$defaultitem\"        \
		--menu \"\$prompt\"                     \
		$height $width $rows                    \
		$menu_list                              \
		2>&1 >&$DIALOG_TERMINAL_PASSTHRU_FD
	)

	local retval=$?
	f_dialog_data_sanitize menu_choice
	f_dialog_menutag_store "$menu_choice"

	# Only update default-item on success
	[ $retval -eq $DIALOG_OK ] && f_dialog_default_store "$menu_choice"
	return $retval
}


############################################################ MAIN
export NOCOLOR=1

MYARG="jname nic"
MYOPTARG=""
MYDESC="Edit properties for vitual image of VM"
CBSDMODULE="jail"

globalconf="${distdir}/cbsd.conf";

set -e
. ${globalconf}
set +e

. ${subr}
. ${strings}
. ${tools}
. ${vimageconf}
. ${cbsdinit}

. ${distdir}/bsdconfig.subr
. $BSDCFG_LIBE/$APP_DIR/include/messages-jailnic.subr

. ${jrcconf}
[ $? -eq 1 ] && err 1 "${N1_COLOR}No such VM: ${N2_COLOR}${jname}${N0_COLOR}"
[ "${emulator}" != "jail" ] && err 1 "${N1_COLOR}Not in jail mode${N0_COLOR}"

. $BSDCFG_LIBE/$APP_DIR/include/jailnic.subr
. ${distdir}/jail.subr

# Incorporate rc-file if it exists
[ -f "$HOME/.bsdconfigrc" ] && f_include "$HOME/.bsdconfigrc"

#
# Process command-line arguments
#
while getopts h$GETOPTS_STDARGS flag; do
	case "$flag" in
	h|\?) f_usage $BSDCFG_LIBE/$APP_DIR/USAGE "PROGRAM_NAME" "$pgm" ;;
	esac
done
shift $(( $OPTIND - 1 ))

#
# Initialize
#
f_dialog_title " $msg_add_jailnic "
f_dialog_backtitle "${ipgm:+bsdconfig }$pgm"
f_mustberoot_init

. ${distdir}/jail.subr
. ${settingstui}

#
# Loop over the main menu until we've accomplished what we came here to do
#
while :; do
	dialog_menu_main
	ret=$?

	command=
	case $ret in
		${DIALOG_OK})
			f_dialog_menutag_fetch mtag
			case "$mtag" in
				?" $msg_exit")
					break
					;;
				"-"|nic_nameslot|size|nic_type)
					continue
					;;
				nic_hwaddr)
					get_construct_nic_hwaddr && update_nic_hwaddr ${nic_id}
					;;
				nic_parent)
					get_nic_parent && update_nic_parent ${nic_id}
					;;
				remove)
					if getyesno "Detach and remove NIC from ${jname} jail?"; then
						jail_remove_nic "${nic_id}"
						f_die
					fi
					;;
				*)
					;;
			esac
			;;
		${DIALOG_HELP})
			get_help
			continue
			;;
		*)
			f_die
			;;
	esac
done

return $SUCCESS

################################################################################
# END
################################################################################
