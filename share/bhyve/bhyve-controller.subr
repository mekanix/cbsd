# Generic storage controller bhyve function

if [ ! "$_CBSD_BHYVE_NVME_SUBR" ]; then
_CBSD_BHYVE_NVME_SUBR=1
###

# load ctr info
load_ctr_info()
{
	ctr_last_id=1
	local sqldelimer=" "

	unset ctrlist

	for last_disk in $( /usr/bin/seq 1 16 ); do
		unset ctr_id${last_disk}
	done

	eval $( cbsdsqlro ${jailsysdir}/${jname}/local.sqlite "SELECT id,name,type,count,cache FROM bhyve_dskcontroller WHERE name != \"0\" " | while read id name type count cache; do
		[ -z "${id}" ] && return 0
		echo "export ctr_id${ctr_last_id}=\"${id}\""
		echo "export ctr_name${ctr_last_id}=\"${name}\""
		echo "export ctr_type${ctr_last_id}=\"${type}\""
		echo "export ctr_count${ctr_last_id}=\"${count}\""
		echo "export ctr_cache${ctr_last_id}=\"${cache}\""
		ctr_last_id=$(( ctr_last_id + 1 ))
	done ) || err 1 "${N1_COLOR}Error while create controller map${N0_COLOR}"
}

# form for $new_ctr_type
get_ctr_type()
{
	local _input _retval
	local title=" Controller type "
	hline=

	defaultitem="${new_ctr_type}"

	local menu_list="
		'ahci'	'AHCI controller'	'AHCI controller attached to arbitrary devices'
	" # END-QUOTE

	cbsd_menubox
	retval=$?

	case $retval in
		${DIALOG_OK})
			new_ctr_type="${mtag}"
			return 0
			;;
	esac

	return ${retval}
}

# form for $new_ctr_name
get_ctr_name()
{
	local _input _defname
	local _tmp_new_ctr_type _freename

	if [ -z "${new_ctr_type}" ]; then
		f_dialog_msgbox "Please select controller type first"
		return 1
	fi

	_tmp_new_ctr_type=$( echo ${new_ctr_type} | /usr/bin/tr '-' '_' )
	_tmp_new_ctr_type="${_tmp_new_ctr_type}_ctr"

	_freename=$( freectr jname=${jname} default_ctrname=${_tmp_new_ctr_type} )
	_defname="${_freename}"

	f_dialog_title " controller name "

	f_dialog_input _input "Input name, eg: ahci_ctr1" "${_defname}" \
		"${_message}" || return $?

	[ -n "${_input}" ] && new_ctr_name="${_input}"
}

# form for $new_ctr_count
get_ctr_count()
{
	local _input _defname="8"

	f_dialog_title " Select the port count of the controller "

	[ -n "${new_ctr_count}" ] && _defname="${new_ctr_count}"

	f_dialog_input _input "Input count, eg: 8" "${_defname}" \
		"${_message}" || return $?

	[ -n "${_input}" ] && new_ctr_count="${_input}"
}

# form for $new_ctr_cache
get_ctr_cache()
{
	local _input _retval

	local title=" Controller cache for ${mtag} "
	hline=

	[ -n "${new_ctr_cache}" ] && local defaultitem="${new_ctr_cache}"

	local menu_list="
		'nocache'	'Open the file with O_DIRECT'	'Open the file with O_DIRECT'
		'direct'	'Open the file using O_SYNC'	'Open the file using O_SYNC'
	" # END-QUOTE

	cbsd_menubox
	retval=$?

	new_ctr_cache=

	case ${retval} in
		${DIALOG_OK})
			new_ctr_cache="${mtag}"
			return 0
			;;
	esac

	return ${retval}
}



# form for new ctr
# -c "${new_ctr_count}" -n "${new_ctr_name}" -t "${new_ctr_type}" -z "${new_ctr_cache}"
# e.g: add_ctr -c 8 -n "controller name" -t ahci -z nocache
add_ctr()
{
	local count=
	local name=
	local type=
	local cache=
	local _res _msg

	while getopts "c:n:t:z:" opt; do
		case "${opt}" in
			c) count="${OPTARG}" ;;
			n) name="${OPTARG}" ;;
			t) type="${OPTARG}" ;;
			z) cache="${OPTARG}" ;;
		esac
		shift $(($OPTIND - 1))
	done

	[ -z "${count}" ] && err 1 "${N1_COLOR}Empty count${N0_COLOR}"
	[ -z "${name}" ] && err 1 "${N1_COLOR}Empty name${N0_COLOR}"
	[ -z "${type}" ] && err 1 "${N1_COLOR}Empty type${N0_COLOR}"
	[ -z "${cache}" ] && err 1 "${N1_COLOR}Empty cache${N0_COLOR}"

	case "${type}" in
		ahci|ahci-cd|ahci-hd|nvme)
			;;
		*)
			err 1 "${N1_COLOR}add_ctr: unknown controller type, valid: ahci,ahci-cd,ahci-hd,nvme. specified: ${N2_COLOR}${type}${N0_COLOR}"
			;;
	esac

	_res=$( cbsdsqlro ${jailsysdir}/${jname}/local.sqlite SELECT name FROM bhyve_dskcontroller WHERE name=\"${name}\" LIMIT 1 )

	[ -n "${_res}" ] && err 1 "${N1_COLOR}controller name already exist: ${N2_COLOR}${name}${N0_COLOR}"

	cbsdsqlrw ${jailsysdir}/${jname}/local.sqlite "INSERT INTO bhyve_dskcontroller ( name,type,count,cache ) VALUES ( \"${name}\",\"${type}\",\"${count}\",\"${cache}\" )"

	return 0
}

# form for remove ctr
# -c "${new_ctr_count}" -n "${new_ctr_name}" -t "${new_ctr_type}" -z "${new_ctr_cache}"
# e.g: del_ctr -c 8 -n "controller name" -t ahci -z nocache
del_ctr()
{
	local name=
	local _res _msg

	while getopts "n::" opt; do
		case "${opt}" in
			n) name="${OPTARG}" ;;
		esac
		shift $(($OPTIND - 1))
	done

	[ -z "${name}" ] && err 1 "${N1_COLOR}Empty name${N0_COLOR}"

	_res=$( cbsdsqlro ${jailsysdir}/${jname}/local.sqlite SELECT name FROM bhyve_dskcontroller WHERE name=\"${name}\" LIMIT 1 )

	[ -z "${_res}" ] && err 1 "${N1_COLOR}no such controller named: ${N2_COLOR}${name}${N0_COLOR}"

	# todo: check for disk dependencies
	cbsdsqlrw ${jailsysdir}/${jname}/local.sqlite "DELETE FROM bhyve_dskcontroller WHERE name=\"${name}\""

	return 0
}

###
fi
